set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'nvie/vim-flake8'
Plugin 'altercation/vim-colors-solarized'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

syntax on

set showcmd                     " show partial commands in status line
set ruler                       " show cursor position in status line
set number

set smartindent
set tabstop=4
set shiftwidth=4
set expandtab

" Python config
autocmd Filetype python 	call Flake8()
autocmd BufWrite *.py		call Flake8()

function VerticalFlakes()
    call Flake8()
    wincmd t
    wincmd H
    vertical resize 120
endfunction

set textwidth=72
"
" Flake8 Configuration
let g:flake8_max_line_length=110
let g:flake8_max_complexity=10

match Error /\%>111v.\+/

abbr _pdb import pdb; pdb.set_trace()
abbr _main if __name__ == "__main__":<CR>    main()
abbr _optparse parser = optparse.OptionParser("usage: %prog [options]"
abbr improt import

set background=dark
set t_Co=16
colorscheme solarized
